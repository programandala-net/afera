\ plus3dos.fsb
\ +3DOS support for ZX Spectrum Abersoft Forth
 
\ Copyright (C) 2015 Marcos Cruz (programandala.net)

\ This file is part of
\ Afera (Abersoft Forth Extensions, Resources and Addons)

\
\ Requirements:
\ fsb:
\   (http://programandala.net/en.program.fsb.html)
\ AF extend
\   (http://programandala.net/en.program.af_extend.html)
\ Pleonasmo AF
\   http://programandala.net/en.program.pleonasmo.html
\
\ 2015-02-13: Start.

( Init )

CR ." Loading +3DOS extensions" CR

  \ RAM/ROM switching system variable:
CONSTANT SYS-BANKM
  \ Port for horizontal ROM switch and RAM paging:
CONSTANT BANK1-PORT

( DOS calling routine )

LABEL DOS.IX  JPIX

LABEL DOS

  \ Adapted from the ZX Spectrum +3 manual.

  \ IX holds the address of the DOS routine to be run. All
  \ other registers are passed intact to the DOS routine and
  \ are returned from it.
 
  \ Stack must be somewhere in central 32K (conforming to DOS
  \ requirements), so saved AF and BC will not be switched out.

  AF PUSH  BC PUSH  SYS-BANKM LDA
  7 OR#  \ want RAM page 7
  4 A RES  \ and DOS ROM
  BANK1-PORT BC LDP#
  DI  SYS-BANKM STA  \ keep system variables up to date
  A OUTBC  EI  \ RAM page 7 to top and DOS ROM
  BC POP  AF POP
  DOS.IX CALL
  AF PUSH  BC PUSH
  -->

( DOS calling routine )

  SYS-BANKM LDA
  F8 AND  \ reset bits for page 0
  4 A SET
  BANK1-PORT BC LDP#
  \ switch back to RAM page 0 and 48 BASIC
  DI  SYS-BANKM STA  A OUTBC  EI
  BC POP  AF POP  RET
  END-CODE

( Filenames )

16 CONSTANT /FILENAME \ max lenght

0 VARIABLE FILENAME /FILENAME 2- ALLOT \ filename area

: -FILENAME ( -- )
  \ Init the filename area
  FILENAME /FILENAME 255 FILL ;

: FILENAME! ( ca len -- )
  \ Store a filename into the filename area
  -FILENAME /FILENAME MAX FILENAME SWAP CMOVE ;

-->

( File access methods )

1 CONSTANT R/O  2 CONSTANT W/O  3 CONSTANT R/W  5 CONSTANT S/R

: BIN ( fam -- fam ) NOOP ;

CODE HEADED ( fam -- fam' )
  HL POP  7 L SET HL PUSH 
  END-CODE

-->

( Save a file)

CODE (SAVE-FILE) ( -- ior )
  \ XXX TODO
END-CODE --> 

( Load a file)

CODE (LOAD-FILE) ( -- ior )
  \ XXX TODO
END-CODE --> 

( Delete a file)

CODE (DELETE-FILE) ( -- ior )
  \ XXX TODO
END-CODE -->

( User interface)

 \ XXX TODO

: SAVE-FILE ( ca1 len1 ca2 len2 -- )

  \ Save a file

  \ ca1 len1 = memory region to save
  \ ca2 len2 = filename

  >UFIA (SAVE-FILE) ?DOS-ERROR ;

: SAVE-BLOCKS-FILE ( ca len -- )
  BLOCKS>UFIA (SAVE-FILE) ?DOS-ERROR ;

: LOAD-BLOCKS-FILE ( ca len -- )
  BLOCKS>UFIA (LOAD-FILE) ?DOS-ERROR ;

: DELETE-FILE ( ca len -- )
  (DELETE-FILE) ?DOS-ERROR ;


