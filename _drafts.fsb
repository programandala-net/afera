\ Draft code for Abersof Forth

\ This file is part of
\ Afera (Abersoft Forth Extensions, Resources and Addons)

( PROMPT )

  27975 CONSTANT (.PROMPT) \ address of `(.")` in `QUIT`
  \ Problem: the in-line parameter of `BRANCH` is an offset.
  \ Anyway, it doesn't work, it does nothing:
  : PROMPT  ( -- )
    BRANCH [ (.PROMPT) HERE - , ] ;

( ?DO )

\ Version from Matteo Vitturi's Forth.
\ It seems illogical, or unfinished.

: ?DO
   COMPILE 2DUP
   COMPILE (DO)
   COMPILE -
   [COMPILE] IF 2DROP
   HERE SWAP 1 6
   ; IMMEDIATE

( EXIT)

\ An alternative way to fix EXIT

: EXIT  ( -- )  COMPILE [COMPILE] ;S  ; IMMEDIATE

( RDROP)

  \ Abersoft Forth's `EXIT` (fixed) just does a `RDROP`, so:
 
: RDROP  ( R: x -- )  EXIT  ;



( TCH)

CODE TCH  ( c -- )
  \ Print the character with ASCII code c on screen or printer.

  \ 2015-04-01: Start. Code adapted from Lennart Benschop's
  \ SPECTRUM FORTH83.

  H POP
  L A LD
  %Y FF 52 )LD#
  PRT
  END-CODE

CODE CHAN  ( n -- )
  \ Choose an output channel (2=screen; 3=printer).

  \ 2015-04-01: Start. Code adapted from Lennart Benschop's
  \ SPECTRUM FORTH83.

  \ XXX FIXME
  \ n=0 or n=1 don't print on the lower part of the screen
  \ why?
 
  H POP
  L A LD
  BC PUSH  IX PUSH  \ save the Forth registers
  1601 CALL
  IX POP  BC POP  \ restore the Forth registers
  END-CODE

-->

( AT-XY )

\ 2015-04-01: Start. Code adapted from Lennart Benschop's
\ SPECTRUM FORTH83.

  \ The definition of Abersoft Forth's `AT` is the following
  \ (after Don Thomasson's book "Advanced Spectrum Forth", page
  \ 127):

  \ : AT ( line col -- )
  \   ABS DUP 31 > IF  2DROP
  \   ELSE
  \     SWAP ABS DUP 21 >
  \     IF    2DROP  ELSE  22 EMIT EMIT EMIT  THEN
  \   THEN  ;

: AT-XY ( line col -- )
  SWAP DUP 23 -  \ not the last line?
  IF    22 TCH TCH TCH
  ELSE  1- DUP TCH TCH 0 TCH CR
        \ system variable:
        \ address in display file of print position
        DUP 23684 +!
        \ system variable:
        \ 33-column number for print position
        33 SWAP - 23688 C!
  THEN ;

